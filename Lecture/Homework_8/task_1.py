'''
Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy
Полученные значения должны быть равны.
Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков,
а затем с использованием функций из библиотек numpy и pandas.
'''

import numpy as np

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

cov = np.mean(zp*ks) - np.mean(zp) * np.mean(ks)  # 〖cov〗_xy=M(XY)-M (X)*M(Y)

print(f'Ковариация, рассчитанная с помощью элементарных действий:\n {cov}')   
print(f'Несмещенная ковариация:\n {np.cov(zp, ks)}') 
print(f'Смещенная ковариация:\n {np.cov(zp, ks, ddof = 0)}') 
print(f'Коэффициент корреляции Пирсона, рассчитанный с помощью ковариации и среднеквадратических отклонений:\n {cov/((np.std(zp, ddof = 0))*(np.std(ks, ddof = 0)))}')
print(f'Коэффициент корреляции Пирсона, рассчитанный с помощью функции:\n {np.corrcoef(zp, ks)}')

'''
Ковариация, рассчитанная с помощью элементарных действий:
 9157.839999999997
Несмещенная ковариация (тут нам нужна смещенная):
 [[ 3882.93333333 10175.37777778]
 [10175.37777778 33854.32222222]]
Смещенная ковариация:
 [[ 3494.64  9157.84]
 [[ 3882.93333333 10175.37777778]
 [10175.37777778 33854.32222222]]
Смещенная ковариация:
 [[ 3494.64  9157.84]
 [ 9157.84 30468.89]]
Коэффициент корреляции Пирсона, рассчитанный с помощью ковариации и среднеквадратических отклонений:
 0.8874900920739158
Коэффициент корреляции Пирсона, рассчитанный с помощью функции:
 [[1.         0.88749009]
 [0.88749009 1.        ]]
'''

